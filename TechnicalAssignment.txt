Доп. пожелания/замечания от Comodo:
1)      Задание надо сделать аккуратно и чтобы работало. В условии сказано "simple", значит наворачивать все мыслимые фреймворки не надо. Но качество должно быть по максимуму - т.е. аккуратный читаемый код, нормальная отлаженная сборка (на чужой машине, чтобы без путей вида /home/sergey/... и т.п., без мусора типа \*.о файлов и т.д.). Что нужно для сборки, должно быть описано в README и/или автоматизировано.
2)      Требования по технологиям – Linux Debian/Ubuntu, Qt, C++ (11), Boost.
3)      Задание комплексное - т.е. и на (быструю) работу с файлами, и на IPC, и на GUI. Надо показать это все вместе, но без фанатизма.
4)      GUI часть должна быть реализована с использованием Qt, соответственно и проект должен быть оформлен как Qt-решение. Визуальная часть решения не должна «фризиться», когда выполняется анализ файлов, т.е. должны присутствовать ассинхронные операции.
5)      Целевая система - Ubuntu 14.04 x64, но! с прицелом на кроссплатформенное решение



   Signatures Detector

You need to develop simple signature detector application which contains of the following two 

components:

 Scanner: core component, implemented as a separate server process. 

 GUI application. 

   Scanner description 

Scanner component must be able to: 

 Scan file by path; 

 Scan array of bytes. 

Define and implement appropriate methods in the scanner interface. 

Use the following malware detection algorithm: if scanned file contains any of predefined byte sequences, 

it is considered infected. The sequences are stored in the regular text file separated by newlines, in the 

following format: 

HexString.{GUID} 

Examples: 

01ABEDFF55.{ab306a70-0fd2-4b4b-84fe-f9ebd899d90f} 

EE21DEAD827739ACCD028FFC.{5c34b10f-3f6d-4bbb-b9ec-2faa1ee07660} 

If appropriate sequence is found, scanner must return its GUID. Use file mapping to increase scanning 

performance. 

   GUI application description 

 Application must be able to use scanner component to recursively scan specific folder. 

 Scanning progress must be displayed in the progress bar control. 

 To improve speed, scanning must be performed in the separated threads (thread pool) in parallel. 

   Notes

 You are free to refer to any documentation/internet etc.
